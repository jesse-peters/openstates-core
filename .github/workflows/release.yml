name: Release Steps
on:
  push:
    tags:
      - '*'

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          # Retrieves all commit history for path filter checking
          fetch-depth: 0
      - name: setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: install GDAL and python bindings
        run: sudo apt update && sudo apt-get install -y gdal-bin python3-gdal
      - name: install Poetry
        uses: snok/install-poetry@v1.3.3
      - name: configure pypi credentials
        run: poetry config pypi-token.pypi "${{ secrets.PYPI_API_KEY }}"
      - name: Publish core package
        run: poetry publish --build
      - name: install dependencies
        run: poetry install
      - name: update metadata
        env:
          DATABASE_URL: ${{ secrets.OPENSTATES_DATABASE_URL }}
        run: poetry run os-initdb
      # Add steps for openstatesmetadata package
      - name: Create directory and copy openstatesmetadata
        run: |
          mkdir -p /openstates-core-metadata/openstatesmetadata
          cp -r openstates/metadata /openstates-core-metadata/openstatesmetadata
      - name: Change directory to openstatesmetadata
        run: cd /openstates-core-metadata
      - name: Move configuration files
        run: |
          mv openstatesmetadata/pyproject.toml.sample pyproject.toml
          mv openstatesmetadata/.python-version.sample .python-version
          mv openstatesmetadata/README.md.sample README.md
      - name: Install dependencies for openstatesmetadata
        run: poetry install
      - name: Configure pypi credentials for metadata package
        run: poetry config pypi-token.pypi "${{ secrets.PYPI_API_KEY }}"
      - name: Publish openstatesmetadata package
        run: poetry publish --build
